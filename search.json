[{"path":"https://stevenpbachman.github.io/LCr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 LCr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stevenpbachman.github.io/LCr/articles/Generate-csvs.html","id":"get-name-keys-from-a-species-list","dir":"Articles","previous_headings":"","what":"Get name keys from a species list","title":"Generate SIS Connect files for multiple plant species","text":"first step determine list LC species want document. study predicted extinction risk species flowering plants (Angiosperms). can filter species confidently predicted LC, manually generate data frame list shown . Note predictions can wrong please verify selected species genuine LC species. useful resource help determine whether species LC check whether previously assessed. ThreatSearch resource maintained BGCI contains evidence-based plant conservation assessments compiled digital resources including national/regional Red Lists. Next can reconcile names data sources using existing packages rWCVP rgbif. provide us name keys can used search data species. case want enforce single matching name every name list set match parameter ‘single’, can set ‘multiple’ wish allow multiple matches. Similarly, want focus accepted species, set tax_status parameter ‘accepted’, can set ‘’ wish return different taxonomic status. name matching went well. ’ve checked authors ’m happy names match correct concept taxa. Note worth spending time name matching step ensure using consistent concept taxa working across GBIF WCVP. Adjust tax_status match parameters fuzzy searching. now useful fields help us find data species. GBIF_usageKey identifier species according GBIF name backbone wcvp_ipni_id identifies species according WCVP name backbone.","code":"lc_species <-   data.frame(sp = c(     \"Crabbea acaulis\", \"Crabbea cirsioides\", \"Crabbea nana\", \"Crabbea velutina\"   )) print(lc_species) #>                   sp #> 1    Crabbea acaulis #> 2 Crabbea cirsioides #> 3       Crabbea nana #> 4   Crabbea velutina lc_keys <-   get_name_keys(     df = lc_species,     name_column = \"sp\",     tax_status = \"accepted\",     match = \"single\"   )  # take a look at the resulting table glimpse(lc_keys)"},{"path":"https://stevenpbachman.github.io/LCr/articles/Generate-csvs.html","id":"generate-an-lc-point-file","dir":"Articles","previous_headings":"","what":"Generate an LC point file","title":"Generate SIS Connect files for multiple plant species","text":"Use make_LC_points function kick download GBIF, clean downloaded occurences, reformat IUCN spatial standards. Name information required standard point file. Set range_check parameter TRUE want exclude points outside native range according WCVP, otherwise standard cleaning protocols applied using CoordinateCleaner package. Note use rGBIF package obtain occurrence data. need set GBIF credentials obtain downloads. set account GBIF need register credentials r environment - see post explanation. IUCN spatial point standards require fields relating data compiler associated institution. can manually entered . occurrence records removed pass cleaning tests outside native range. Note output make_LC_points likely large list two three objects: data frame occurrences called points, data frame called citation holds citation details download, set range_check = TRUE also return native ranges data frame. GBIF citation important retain need cite use data Red List assessment ’ll add reference file later .","code":"lc_sis_occs <-   make_LC_points(     keys_df = lc_keys,     first_name = \"Steven\",     second_name = \"Bachman\",     institution = \"Royal Botanic Gardens, Kew\",     range_check = TRUE   )  # save the file - you'll need to submit this to IUCN library(readr) write_csv(lc_points$points, \"lc_points_fungi.csv\")"},{"path":"https://stevenpbachman.github.io/LCr/articles/Generate-csvs.html","id":"generate-lc-csv-files","dir":"Articles","previous_headings":"","what":"Generate LC CSV files","title":"Generate SIS Connect files for multiple plant species","text":"can now generate LC csv files. can use wcvp_ipni_id field unique identifier. need add assessor details registered credits csv file, note email address also required. Now can add GBIF citation back goes references csv file. Finally, native ranges generated earlier can used help define list countries species native . final step make ZIP file needed import data SIS Connect. lc_sis_files list object just created run make_zip function saves zip file current working directory. done! Send LC species Red list start working next batch.","code":"lc_sis_files <- make_sis_csvs(unique_id = lc_keys$wcvp_ipni_id,                               wcvp_ipni_id = lc_keys$wcvp_ipni_id,                               first_name = \"Steven\",                               second_name = \"Bachman\",                               email = \"s.bachman@kew.org\",                               institution = \"Royal Botanic Gardens, Kew\",                               gbif_ref = lc_sis_occs$citation,                               native_ranges = lc_sis_occs$native_ranges                               ) make_zip(lc_sis_files)"},{"path":"https://stevenpbachman.github.io/LCr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steven Bachman. Author, maintainer. Matilda Brown. Author.","code":""},{"path":"https://stevenpbachman.github.io/LCr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bachman S, Brown M (2025). LCr: Generate minimal Least Concern Red List assessments. R package version 0.1.0, https://github.com/stevenpbachman/LCr.","code":"@Manual{,   title = {LCr: Generate minimal Least Concern Red List assessments},   author = {Steven Bachman and Matilda Brown},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/stevenpbachman/LCr}, }"},{"path":[]},{"path":"https://stevenpbachman.github.io/LCr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Generate minimal Least Concern Red List assessments","text":"Generate minimal documentation species expected Least Concern (see IUCN Red List). Submit IUCN Red List via SIS Connect (registration needed)","code":""},{"path":"https://stevenpbachman.github.io/LCr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate minimal Least Concern Red List assessments","text":"yet CRAN, can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"stevenpbachman/LCr\")"},{"path":"https://stevenpbachman.github.io/LCr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Generate minimal Least Concern Red List assessments","text":"Basic workflow: get_name_keys check name status taxonomic name backbones make_LC_points gather occurrence records GBIF convert IUCN standard point file make_sis_csvs generate SIS connect csv files make_zip make zip file SIS Connect imports","code":""},{"path":"https://stevenpbachman.github.io/LCr/index.html","id":"example","dir":"","previous_headings":"Usage","what":"Example","title":"Generate minimal Least Concern Red List assessments","text":"","code":"library(LCr)  # some parameters needed for the point and csv files first_name = \"your first name\" second_name = \"your second name\" email = \"your email\" institution = \"your institution\"  # create a species list sp <- data.frame(sp_col = c(\"Crabbea acaulis\", \"Crabbea cirsioides\"))  # check names against GBIF and WCVP name backbones  sp_keys <- get_name_keys(df = sp, name_column = \"sp_col\")  # generate a point file according to IUCN standards sp_occs <-  make_LC_points(keys_df = sp_keys, range_check = TRUE)  # generate the csv files sp_csvs <- make_sis_csvs(unique_id = sp_keys$wcvp_ipni_id,                               wcvp_ipni_id = sp_keys$wcvp_ipni_id,                               gbif_ref = sp_occs$citation,                               native_ranges = sp_occs$native_ranges)  # make the ZIP file to send to IUCN SIS Connect make_zip(sp_csvs)"},{"path":"https://stevenpbachman.github.io/LCr/reference/LCr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"LCr: Generate minimal Least Concern Red List assessments — LCr-package","title":"LCr: Generate minimal Least Concern Red List assessments — LCr-package","text":"Generate Red List compliant spatial data minimal Red List assessment documentation Least Concern species","code":""},{"path":[]},{"path":"https://stevenpbachman.github.io/LCr/reference/LCr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"LCr: Generate minimal Least Concern Red List assessments — LCr-package","text":"Maintainer: Steven Bachman s.bachman@kew.org (ORCID) Authors: Matilda Brown m.brown2@kew.org (ORCID)","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/batchCon.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch process, preliminary conservation assessments — batchCon","title":"Batch process, preliminary conservation assessments — batchCon","text":"Combines main routines rCAT process multiple species AOO, EOO etc.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/batchCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch process, preliminary conservation assessments — batchCon","text":"","code":"batchCon(   taxa,   long,   lat,   project2gether = TRUE,   cellsize = 2000,   aooMin = FALSE,   it = 1296,   returnV = \"S\" )"},{"path":"https://stevenpbachman.github.io/LCr/reference/batchCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch process, preliminary conservation assessments — batchCon","text":"taxa field defines list species taxa long field defines longitude set points lat field defines latitude set points project2gether TRUE FALSE, TRUE data projected together using centre latitudes longitudes. FALSE species projected separately. Default = TRUE cellsize cell length metres used AOO projection N.B. IUCN recommend 2000 m (default 2000) aooMin calls aooMin routines well simple aoo, warned lots species points can take time run (default=FALSE) aooMin=TRUE determines number iterations run find aooMin (default=1296) returnV switches return different sets results:  S = simple returns dataframe results = (taxa ,Number points,EOO km2, Simple AOO km2,Minimum AOO, EOO category, AOOcategory, Cellwidth, projection parameters)  SF = simple features dataframe results, taxa taxon field, type=(EOO,AOO,points). NB points projected together aooMin ignored","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/batchCon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Batch process, preliminary conservation assessments — batchCon","text":"function expects list taxa latitudes longitudes.ie etc","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/batchCon.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Batch process, preliminary conservation assessments — batchCon","text":"switch either project data whole taxa separately. suggest use switch data similar area (.e. one continent/country/region)","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/batchCon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Batch process, preliminary conservation assessments — batchCon","text":"Justin Moat. J.Moat@kew.org","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/check_tax_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"resolves taxonomicAuthor field when there are varying taxonimic fields returned from GBIF query — check_tax_auth","title":"resolves taxonomicAuthor field when there are varying taxonimic fields returned from GBIF query — check_tax_auth","text":"resolves taxonomicAuthor field varying taxonimic fields returned GBIF query","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/check_tax_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"resolves taxonomicAuthor field when there are varying taxonimic fields returned from GBIF query — check_tax_auth","text":"","code":"check_tax_auth(df)"},{"path":"https://stevenpbachman.github.io/LCr/reference/check_tax_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"resolves taxonomicAuthor field when there are varying taxonimic fields returned from GBIF query — check_tax_auth","text":"df","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/check_tax_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"resolves taxonomicAuthor field when there are varying taxonimic fields returned from GBIF query — check_tax_auth","text":"returns GBIF taxonimic information reformatted taxonomicAuthor","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/clean_occs.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean GBIF occurrences based on user-selected flags and/or specific gbifIDs — clean_occs","title":"Clean GBIF occurrences based on user-selected flags and/or specific gbifIDs — clean_occs","text":"Clean GBIF occurrences based user-selected flags /specific gbifIDs","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/clean_occs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean GBIF occurrences based on user-selected flags and/or specific gbifIDs — clean_occs","text":"","code":"clean_occs(   flagged_occs,   remove_flags = c(\"flag_no_coords\", \"flag_cc_capitals\", \"flag_cc_centroids\",     \"flag_cc_institutions\", \"flag_cc_equal\", \"flag_cc_gbif\", \"flag_cc_zeros\",     \"flag_high_uncertainty\", \"flag_outside_native\"),   remove_gbifids = NULL,   gbifid_reason = NULL )"},{"path":"https://stevenpbachman.github.io/LCr/reference/clean_occs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean GBIF occurrences based on user-selected flags and/or specific gbifIDs — clean_occs","text":"flagged_occs Result flag_occs() function remove_flags Vector flag names use cleaning. Set NULL ignore automatic flags. Flag names must : \"flag_no_coords\" Missing coordinates; \"flag_cc_capitals\" Near country capitals; \"flag_cc_centroids\" Near country centroids; \"flag_cc_institutions\" Near biodiversity institutions; \"flag_cc_equal\" Equal coordinates; \"flag_cc_gbif\" GBIF headquarters; \"flag_high_uncertainty\" High coordinate uncertainty; \"flag_outside_native\" Outside native range remove_gbifids Vector gbifIDs remove dataset, named list names reasons values vectors gbifIDs sharing reason. Example: list(\"identification uncertain\" = c(\"1234\", \"5678\"),              \"habitat mismatch\" = c(\"9012\")) gbifid_reason Character string providing default reason manual gbifID removal remove_gbifids simple vector.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/clean_occs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean GBIF occurrences based on user-selected flags and/or specific gbifIDs — clean_occs","text":"list containing:   - clean_occs: Cleaned occurrences based selected flags /gbifIDs   - problem_occs: Occurrences filtered flags/reasons","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/create_species_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a leaflet map to show the distribution of occurrence data for each species — create_species_map","title":"Display a leaflet map to show the distribution of occurrence data for each species — create_species_map","text":"Display leaflet map show distribution occurrence data species","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/create_species_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a leaflet map to show the distribution of occurrence data for each species — create_species_map","text":"","code":"create_species_map(data, species_range = NULL, show_flags = TRUE)"},{"path":"https://stevenpbachman.github.io/LCr/reference/create_species_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a leaflet map to show the distribution of occurrence data for each species — create_species_map","text":"data data frame containing occurrence data show_flags Set false just want see points map without flags native_ranges data frame containing occurrence data show_flags","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/create_species_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a leaflet map to show the distribution of occurrence data for each species — create_species_map","text":"Interactive leaflet map","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/create_status_gauge.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metrics from a clean point occurrence file — create_status_gauge","title":"Generate metrics from a clean point occurrence file — create_status_gauge","text":"Generate metrics clean point occurrence file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/create_status_gauge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metrics from a clean point occurrence file — create_status_gauge","text":"","code":"create_status_gauge(species_data)"},{"path":"https://stevenpbachman.github.io/LCr/reference/create_status_gauge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metrics from a clean point occurrence file — create_status_gauge","text":"species_data (df) results make_metrics() function","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/create_status_gauge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metrics from a clean point occurrence file — create_status_gauge","text":"Returns ggplot visualise Least Concern results","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/flag_occs.html","id":null,"dir":"Reference","previous_headings":"","what":"Flags GBIF occurrence data based on common coordinate issues — flag_occs","title":"Flags GBIF occurrence data based on common coordinate issues — flag_occs","text":"Flags GBIF occurrence data based common coordinate issues","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/flag_occs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flags GBIF occurrence data based on common coordinate issues — flag_occs","text":"","code":"flag_occs(gbif_occs, native_ranges = NULL, buffer = 1000)"},{"path":"https://stevenpbachman.github.io/LCr/reference/flag_occs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flags GBIF occurrence data based on common coordinate issues — flag_occs","text":"gbif_occs (data frame) GBIF occurrence file DWCA format native_ranges (data frame) Optional native ranges `get_native_range()`","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/flag_occs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flags GBIF occurrence data based on common coordinate issues — flag_occs","text":"list containing:   - flagged_data: original data error flags   - summary: summary error counts","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_gbif_occs.html","id":null,"dir":"Reference","previous_headings":"","what":"Download georeferenced occurrence data using GBIF name identifier — get_gbif_occs","title":"Download georeferenced occurrence data using GBIF name identifier — get_gbif_occs","text":"Download georeferenced occurrence data using GBIF name identifier","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_gbif_occs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download georeferenced occurrence data using GBIF name identifier — get_gbif_occs","text":"","code":"get_gbif_occs(keys_df)"},{"path":"https://stevenpbachman.github.io/LCr/reference/get_gbif_occs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download georeferenced occurrence data using GBIF name identifier — get_gbif_occs","text":"keys_df (data frame) Derived [`get_name_keys()`] function. Must include least GBIF_usageKey obtain GBIF occurrences","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_gbif_occs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download georeferenced occurrence data using GBIF name identifier — get_gbif_occs","text":"(list) 'Points' = downloaded GBIF points, 'Citation' = GBIF citation used references","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_gbif_occs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download georeferenced occurrence data using GBIF name identifier — get_gbif_occs","text":"Initiates occurrence download DWCA format using [rgbif::occ_download()]. `keys_df`contains multiple GBIF_usageKey values, combined single output file.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_name_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get accepted GBIF and POWO identifiers (keys) for taxon names to support data downloads — get_name_keys","title":"Get accepted GBIF and POWO identifiers (keys) for taxon names to support data downloads — get_name_keys","text":"Get accepted GBIF POWO identifiers (keys) taxon names support data downloads","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_name_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get accepted GBIF and POWO identifiers (keys) for taxon names to support data downloads — get_name_keys","text":"","code":"get_name_keys(df, name_column, match = \"single\", kingdom = \"plantae\")"},{"path":"https://stevenpbachman.github.io/LCr/reference/get_name_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get accepted GBIF and POWO identifiers (keys) for taxon names to support data downloads — get_name_keys","text":"df character) Data frame taxon names match (character) Controls output search. Use `single` force single match result highest confidence `` return possible matches sorted order confidence kingdom (character) Defaults `plantae` carries match POWO. set `fungi` carry GBIF search name_col (character) Column taxon names. Include taxonomic authority better matching","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_name_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get accepted GBIF and POWO identifiers (keys) for taxon names to support data downloads — get_name_keys","text":"Returns data frame accepted GBIF POWO identifiers","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_name_keys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get accepted GBIF and POWO identifiers (keys) for taxon names to support data downloads — get_name_keys","text":"Designed batch processing. Default setting (match = \"single\", kingdom = \"plantae\") returns accepted name best single match GBIF POWO name backbones (GBIF kingdom = \"fungi\"). Final list may return fewer names discrepancies e.g. accepted  GBIF, POWO. Output data frame includes GBIF 'usageKey' can used   [`get_gbif_occs()`] get occurrences GBIF, 'wcvp_ipni_id' can used [`powo_range()`] get native ranges. see wider range plausible matches adjust 'match' ''.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_native_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get native ranges for taxa — get_native_range","title":"Get native ranges for taxa — get_native_range","text":"Get native ranges taxa","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_native_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get native ranges for taxa — get_native_range","text":"","code":"get_native_range(keys)"},{"path":"https://stevenpbachman.github.io/LCr/reference/get_native_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get native ranges for taxa — get_native_range","text":"keys (data frame) Contain identifier taxon e.g. derived [`get_name_keys()`]","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_native_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get native ranges for taxa — get_native_range","text":"(data frame) list 'botanical countries' (World Geogrpahic Scheme Recording Plant Distributions) taxon occurs.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_native_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get native ranges for taxa — get_native_range","text":"Currently one option get native ranges (Plants World Online) using WCVP identifier. options added later e.g. GIFT","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_occs_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ISO two-digit code from occurrence lat longs — get_occs_range","title":"Get ISO two-digit code from occurrence lat longs — get_occs_range","text":"Get ISO two-digit code occurrence lat longs","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_occs_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ISO two-digit code from occurrence lat longs — get_occs_range","text":"","code":"get_occs_range(sis_points)"},{"path":"https://stevenpbachman.github.io/LCr/reference/get_occs_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ISO two-digit code from occurrence lat longs — get_occs_range","text":"sis_points (dataframe) SIS points file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/get_occs_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ISO two-digit code from occurrence lat longs — get_occs_range","text":"Occurrence dataframe ISO two-digit codes added internal id","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/lifeform_mapping_POWO_RL.html","id":null,"dir":"Reference","previous_headings":"","what":"lifeform_mapping_POWO_RL — lifeform_mapping_POWO_RL","title":"lifeform_mapping_POWO_RL — lifeform_mapping_POWO_RL","text":"dataset used internally LCr package. Maps POWO lifeform codes IUCN life form codes","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/lifeform_mapping_POWO_RL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lifeform_mapping_POWO_RL — lifeform_mapping_POWO_RL","text":"","code":"lifeform_mapping_POWO_RL"},{"path":"https://stevenpbachman.github.io/LCr/reference/lifeform_mapping_POWO_RL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lifeform_mapping_POWO_RL — lifeform_mapping_POWO_RL","text":"data frame 448 rows 3 variables: lifeform_description chr description chr code chr","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_LC_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Combined function to get clean SIS points file using name identifiers — make_LC_points","title":"Combined function to get clean SIS points file using name identifiers — make_LC_points","text":"Combined function get clean SIS points file using name identifiers","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_LC_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combined function to get clean SIS points file using name identifiers — make_LC_points","text":"","code":"make_LC_points(   keys_df,   first_name = \"\",   second_name = \"\",   institution = \"\",   range_check = FALSE,   kingdom = \"plantae\" )"},{"path":"https://stevenpbachman.github.io/LCr/reference/make_LC_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combined function to get clean SIS points file using name identifiers — make_LC_points","text":"keys_df (data frame) Derived [`get_name_keys()`] function. Must include least GBIF_usageKey obtain GBIF occurrences first_name (character) First name assessor second_name (character) Second name assessor institution (character) Name institution affiliation range_check (boolean) TRUE want carry occurrence cleaning native range filter","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_LC_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combined function to get clean SIS points file using name identifiers — make_LC_points","text":"(list) Includes GBIF \"citation\", \"points\" cleaned SIS compatible point file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_LC_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combined function to get clean SIS points file using name identifiers — make_LC_points","text":"Designed batch processing using keys derived [`get_name_keys()`]","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_biorealms.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a list of biorealms for a species — make_biorealms","title":"Generate a list of biorealms for a species — make_biorealms","text":"Generate list biorealms species","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_biorealms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a list of biorealms for a species — make_biorealms","text":"","code":"make_biorealms(native_ranges)"},{"path":"https://stevenpbachman.github.io/LCr/reference/make_biorealms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a list of biorealms for a species — make_biorealms","text":"TDWG_realms (dataframe) TDWG level 3 realm converter","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_biorealms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a list of biorealms for a species — make_biorealms","text":"concatenated list biorealms SIS connect format","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the elevation upper and lower bounds for the allfields.csv file — make_elevation","title":"Generate the elevation upper and lower bounds for the allfields.csv file — make_elevation","text":"Generate elevation upper lower bounds allfields.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_elevation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the elevation upper and lower bounds for the allfields.csv file — make_elevation","text":"","code":"make_elevation(occs)"},{"path":"https://stevenpbachman.github.io/LCr/reference/make_elevation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the elevation upper and lower bounds for the allfields.csv file — make_elevation","text":"occs","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_elevation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the elevation upper and lower bounds for the allfields.csv file — make_elevation","text":"Returns upper lower elevation based elevation field GBIF occurrence file.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metrics from a clean point occurrence file — make_metrics","title":"Generate metrics from a clean point occurrence file — make_metrics","text":"Generate metrics clean point occurrence file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metrics from a clean point occurrence file — make_metrics","text":"","code":"make_metrics(   occs,   native_ranges = FALSE,   eoo_thresh = 30000,   aoo_thresh = 3000,   points_thresh = 75,   regions_thresh = 5,   recent_thresh = 50 )"},{"path":"https://stevenpbachman.github.io/LCr/reference/make_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metrics from a clean point occurrence file — make_metrics","text":"native_ranges (df) WGSRPD native ranges level 3 eoo_thresh (integer) threshold EOO determine Least Concern aoo_thresh (integer) threshold AOO determine Least Concern points_thresh (integer) threshold number points determine Least Concern regions_thresh (integer) threshold number regions determine Least Concern occs_clean (character) Cleaned GBIF occurrence file DWCA format. See occs_clean() function.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metrics from a clean point occurrence file — make_metrics","text":"Returns dataframe species level metrics","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_sis_csvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all SIS connect csv files — make_sis_csvs","title":"Generate all SIS connect csv files — make_sis_csvs","text":"Generate SIS connect csv files","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_sis_csvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all SIS connect csv files — make_sis_csvs","text":"","code":"make_sis_csvs(   unique_id,   wcvp_ipni_id,   first_name,   second_name,   email,   institution,   gbif_ref = NULL,   powo_ref = FALSE,   native_ranges = NULL,   occs = NULL,   family,   genus,   species,   taxonomicAuthority,   kingdom = \"plantae\" )"},{"path":"https://stevenpbachman.github.io/LCr/reference/make_sis_csvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all SIS connect csv files — make_sis_csvs","text":"unique_id (character) Unique identifier - default GBIF usage key first_name (character) First name assessor second_name (character) Second name assessor email (character) Email assessor institution (character) Name institution affiliation gbif_ref (data frame) GBIF download citation according IUCN format. powo_ref (data frame) citation use POWO according IUCN format. native_ranges (data frame) Native ranges derived [`get_native_range()`] family (character) Field containing family genus (character) Field containing genus species (character) Field containing specific epithet taxonomicAuthority (character) Field containing taxonomic authority kingdom (character) Default 'plantae', can also 'fungi'","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_sis_csvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all SIS connect csv files — make_sis_csvs","text":"Returns SIS compliant zip file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_sis_occs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cleaned gbif DWCA structure to IUCN SIS format — make_sis_occs","title":"Convert cleaned gbif DWCA structure to IUCN SIS format — make_sis_occs","text":"Convert cleaned gbif DWCA structure IUCN SIS format","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_sis_occs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cleaned gbif DWCA structure to IUCN SIS format — make_sis_occs","text":"","code":"make_sis_occs(occs_clean, first_name = \"\", second_name = \"\", institution = \"\")"},{"path":"https://stevenpbachman.github.io/LCr/reference/make_sis_occs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert cleaned gbif DWCA structure to IUCN SIS format — make_sis_occs","text":"occs_clean (character) Cleaned GBIF occurrence file DWCA format. See occs_clean() function. first_name (character) First name assessor second_name (character) Second name assessor institution (character) Institution/affiliation assessor","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_sis_occs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert cleaned gbif DWCA structure to IUCN SIS format — make_sis_occs","text":"dataframe occurence points aligned IUCN Red List spatial data standards","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the SIS connect zip file — make_zip","title":"Generate the SIS connect zip file — make_zip","text":"Generate SIS connect zip file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the SIS connect zip file — make_zip","text":"","code":"make_zip(csv_list = list(sis_files), zip_filename = \"SIS_files.zip\")"},{"path":"https://stevenpbachman.github.io/LCr/reference/make_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the SIS connect zip file — make_zip","text":"csv_list (list) List SIS csv files want zip zip_filename (character) Defaults \"SIS_files.zip\"","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/make_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the SIS connect zip file — make_zip","text":"Returns SIS compliant zip file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_gbif.html","id":null,"dir":"Reference","previous_headings":"","what":"Query taxon name against GBIF backbone — name_search_gbif","title":"Query taxon name against GBIF backbone — name_search_gbif","text":"Queries taxon name GBIF names backbone. Simple wrapper around rgbif `name_backbone_verbose` function.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_gbif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query taxon name against GBIF backbone — name_search_gbif","text":"","code":"name_search_gbif(name, match = \"single\")"},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_gbif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query taxon name against GBIF backbone — name_search_gbif","text":"name (character) taxon name match (character) Controls output search. Use `single` force single match result highest confidence `` return possible matches sorted order confidence species_rank (character) Default TRUE returns matches species level, otherwise FALSE returns taxonomic rank","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_gbif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query taxon name against GBIF backbone — name_search_gbif","text":"Returns data frame initial search term matching name(s)","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_gbif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query taxon name against GBIF backbone — name_search_gbif","text":"","code":"name_search_gbif(\"Poa annua L.\") #> # A tibble: 1 × 10 #>   searchName   usageKey scientificName status   rank    confidence family  genus #>   <chr>           <int> <chr>          <ord>    <chr>        <int> <chr>   <chr> #> 1 Poa annua L.  2704179 Poa annua L.   ACCEPTED SPECIES        100 Poaceae Poa   #> # ℹ 2 more variables: species <chr>, authorship <chr>"},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_powo.html","id":null,"dir":"Reference","previous_headings":"","what":"Query taxon name against POWO (Plants of the World Online) backbone — name_search_powo","title":"Query taxon name against POWO (Plants of the World Online) backbone — name_search_powo","text":"Queries taxon name POWO names backbone. Simple wrapper around rWCVP `wcvp_match_names` function.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_powo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query taxon name against POWO (Plants of the World Online) backbone — name_search_powo","text":"","code":"name_search_powo(df, name_column)"},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_powo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query taxon name against POWO (Plants of the World Online) backbone — name_search_powo","text":"df (data frame) Taxon name(s) name_column (string) Column contains name(s)","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/name_search_powo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query taxon name against POWO (Plants of the World Online) backbone — name_search_powo","text":"Returns data frame initial search term matching name(s)","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/occs_gbif_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate GBIF download citation according to IUCN format — occs_gbif_ref","title":"Generate GBIF download citation according to IUCN format — occs_gbif_ref","text":"Generate GBIF download citation according IUCN format","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/occs_gbif_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate GBIF download citation according to IUCN format — occs_gbif_ref","text":"","code":"occs_gbif_ref(gbif_meta)"},{"path":"https://stevenpbachman.github.io/LCr/reference/occs_gbif_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate GBIF download citation according to IUCN format — occs_gbif_ref","text":"gbif_meta (character) GBIF download metadata","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/occs_gbif_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate GBIF download citation according to IUCN format — occs_gbif_ref","text":"Returns data frame IUCN SIS Connect reference","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup name in POWO (Plants of the World Online) using WCVP ID — powo_lookup","title":"Lookup name in POWO (Plants of the World Online) using WCVP ID — powo_lookup","text":"Lookup name POWO (Plants World Online) using WCVP ID","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup name in POWO (Plants of the World Online) using WCVP ID — powo_lookup","text":"","code":"powo_lookup(wcvp_ipni_id, distribution = FALSE)"},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup name in POWO (Plants of the World Online) using WCVP ID — powo_lookup","text":"wcvp_ipni_id (character) WCVP identifier distribution (character) Default `FALSE`returns taxon information. Use `TRUE` return geographic range information","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup name in POWO (Plants of the World Online) using WCVP ID — powo_lookup","text":"Returns list POWO data","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Return native range of an accepted plant species from POWO (Plants of the World Online) using WCVP identifier — powo_range","title":"Return native range of an accepted plant species from POWO (Plants of the World Online) using WCVP identifier — powo_range","text":"Return native range accepted plant species POWO (Plants World Online) using WCVP identifier","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return native range of an accepted plant species from POWO (Plants of the World Online) using WCVP identifier — powo_range","text":"","code":"powo_range(wcvp_ipni_id)"},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return native range of an accepted plant species from POWO (Plants of the World Online) using WCVP identifier — powo_range","text":"wcvp_ipni_id (character) WCVP identifier","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return native range of an accepted plant species from POWO (Plants of the World Online) using WCVP identifier — powo_range","text":"(dataframe) Native range codes according World Geographic Scheme Recordings Plant Distributions (WGSRPD)","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate POWO download citation according to IUCN format — powo_ref","title":"Generate POWO download citation according to IUCN format — powo_ref","text":"function uses queries POWO get native range","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate POWO download citation according to IUCN format — powo_ref","text":"","code":"powo_ref()"},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate POWO download citation according to IUCN format — powo_ref","text":"Returns dataframe IUCN SIS Connect reference","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup distribution, habit and climate text in POWO (Plants of the World Online) using WCVP ID — powo_text","title":"Lookup distribution, habit and climate text in POWO (Plants of the World Online) using WCVP ID — powo_text","text":"Lookup distribution, habit climate text POWO (Plants World Online) using WCVP ID","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup distribution, habit and climate text in POWO (Plants of the World Online) using WCVP ID — powo_text","text":"","code":"powo_text(wcvp_ipni_id, occs)"},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup distribution, habit and climate text in POWO (Plants of the World Online) using WCVP ID — powo_text","text":"wcvp_ipni_id (character) WCVP identifier occs (df) Occurrence data elevation information","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/powo_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup distribution, habit and climate text in POWO (Plants of the World Online) using WCVP ID — powo_text","text":"Returns list POWO data","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/reorder_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder taxonomic status to give priority to accepted name — reorder_status","title":"Reorder taxonomic status to give priority to accepted name — reorder_status","text":"arranges order taxonomic status GBIF query","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/reorder_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder taxonomic status to give priority to accepted name — reorder_status","text":"","code":"reorder_status(df)"},{"path":"https://stevenpbachman.github.io/LCr/reference/reorder_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder taxonomic status to give priority to accepted name — reorder_status","text":"df (character) data frame ","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/reorder_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder taxonomic status to give priority to accepted name — reorder_status","text":"Returns data frame taxonomic status sorted","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/replace_cardinal_directions.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace text from POWO so that it matches IUCN standards — replace_cardinal_directions","title":"Replace text from POWO so that it matches IUCN standards — replace_cardinal_directions","text":"Replace text POWO matches IUCN standards","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/replace_cardinal_directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace text from POWO so that it matches IUCN standards — replace_cardinal_directions","text":"","code":"replace_cardinal_directions(text)"},{"path":"https://stevenpbachman.github.io/LCr/reference/replace_cardinal_directions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace text from POWO so that it matches IUCN standards — replace_cardinal_directions","text":"text (character) POWO distribtion string","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/replace_cardinal_directions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace text from POWO so that it matches IUCN standards — replace_cardinal_directions","text":"IUCN standardised POWO range string","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_allfields.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the allfields.csv file — sis_allfields","title":"Generate the allfields.csv file — sis_allfields","text":"Generate allfields.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_allfields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the allfields.csv file — sis_allfields","text":"","code":"sis_allfields(unique_id, occs = NULL)"},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_allfields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the allfields.csv file — sis_allfields","text":"unique_id (character) Unique identifier.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_allfields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the allfields.csv file — sis_allfields","text":"Returns SIS compliant data frame","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_assessments.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the assessments.csv file — sis_assessments","title":"Generate the assessments.csv file — sis_assessments","text":"Generate assessments.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_assessments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the assessments.csv file — sis_assessments","text":"","code":"sis_assessments(unique_id, native_ranges, wcvp_ipni_id, occs = NULL)"},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_assessments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the assessments.csv file — sis_assessments","text":"unique_id (character) Unique identifier.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_assessments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the assessments.csv file — sis_assessments","text":"Returns SIS compliant data frame","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the countries.csv file — sis_countries","title":"Generate the countries.csv file — sis_countries","text":"Generate countries.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the countries.csv file — sis_countries","text":"","code":"sis_countries(native_ranges, unique_id)"},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_countries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the countries.csv file — sis_countries","text":"native_ranges (character) native range list WGSRPD level 3","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the countries.csv file — sis_countries","text":"Returns SIS compliant csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_credits.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the credits.csv file — sis_credits","title":"Generate the credits.csv file — sis_credits","text":"Generate credits.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_credits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the credits.csv file — sis_credits","text":"","code":"sis_credits(   unique_id,   first_name = \"your first name\",   second_name = \"your second name\",   email = \"your email\",   affiliation = \"your affiliation\" )"},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_credits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the credits.csv file — sis_credits","text":"unique_id (character) Unique identifier first_name (character) First name assessor second_name (character) Second name assessor email (character) Email assessor affiliation (character) Name institution affiliation","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_credits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the credits.csv file — sis_credits","text":"Returns SIS compliant csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_habitats.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the habitats.csv file — sis_habitats","title":"Generate the habitats.csv file — sis_habitats","text":"Generate habitats.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_habitats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the habitats.csv file — sis_habitats","text":"","code":"sis_habitats(unique_id)"},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_habitats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the habitats.csv file — sis_habitats","text":"unique_id (character) Unique identifier.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_habitats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the habitats.csv file — sis_habitats","text":"Returns SIS compliant csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_plantspecific.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the plantspecific.csv file — sis_plantspecific","title":"Generate the plantspecific.csv file — sis_plantspecific","text":"Generate plantspecific.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_plantspecific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the plantspecific.csv file — sis_plantspecific","text":"","code":"sis_plantspecific(unique_id, wcvp_ipni_id, kingdom = \"plantae\")"},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_plantspecific.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the plantspecific.csv file — sis_plantspecific","text":"unique_id (character) Unique identifier wcvp_ipni_id (character) Vector WCVP IPNI IDs kingdom (character) Defaults `plantae`, can `fungi`","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_plantspecific.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the plantspecific.csv file — sis_plantspecific","text":"SIS compliant csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the references.csv file — sis_references","title":"Generate the references.csv file — sis_references","text":"Generate references.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the references.csv file — sis_references","text":"","code":"sis_references(unique_id, gbif_ref = NULL, powo_ref = NULL)"},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the references.csv file — sis_references","text":"unique_id (character) Unique identifier. gbif_ref (data frame) GBIF download citation according IUCN format. powo_ref (logical) Adds POWO reference TRUE.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the references.csv file — sis_references","text":"Returns SIS compliant data frame","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the taxonomy.csv file — sis_taxonomy","title":"Generate the taxonomy.csv file — sis_taxonomy","text":"Generate taxonomy.csv file","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the taxonomy.csv file — sis_taxonomy","text":"","code":"sis_taxonomy(unique_id, family, genus, species, taxonomicAuthority)"},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the taxonomy.csv file — sis_taxonomy","text":"unique_id (character) Unique identifier. family (character) field containing family. genus (character) field containing genus. species (character) field containing species. taxonomicAuthority (character) field containing taxonomic author.","code":""},{"path":"https://stevenpbachman.github.io/LCr/reference/sis_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the taxonomy.csv file — sis_taxonomy","text":"Returns SIS compliant csv file","code":""}]
